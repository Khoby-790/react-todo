[{"C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\index.js":"1","C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\App.js":"2","C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\pages\\Welcome\\Welcome.jsx":"4","C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\components\\Navbar.jsx":"5","C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\pages\\Builder\\Builder.jsx":"6","C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\components\\QuestionaireTool.jsx":"7"},{"size":500,"mtime":1618746661271,"results":"8","hashOfConfig":"9"},{"size":517,"mtime":1618751271795,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1606387643029,"results":"11","hashOfConfig":"9"},{"size":2309,"mtime":1618751251994,"results":"12","hashOfConfig":"9"},{"size":1154,"mtime":1618749421959,"results":"13","hashOfConfig":"9"},{"size":784,"mtime":1618752682172,"results":"14","hashOfConfig":"9"},{"size":13271,"mtime":1618757153794,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t03hpi",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\index.js",[],"C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\App.js",[],"C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\pages\\Welcome\\Welcome.jsx",[],"C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\components\\Navbar.jsx",[],"C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\pages\\Builder\\Builder.jsx",[],"C:\\Users\\Khoby\\Kodes\\Me\\Todo\\todo-frontend\\src\\components\\QuestionaireTool.jsx",["31"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { Menu, Transition, Switch } from \"@headlessui/react\";\r\nimport {\r\n  ArchiveIcon,\r\n  ChevronDownIcon,\r\n  DuplicateIcon,\r\n  PencilAltIcon,\r\n  DotsVerticalIcon,\r\n} from \"@heroicons/react/solid\";\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst QuestionaireTool = () => {\r\n  const [enabled, setEnabled] = useState(false);\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const [answerType, setAnswerType] = useState(\"Multiple Choice\");\r\n  const [options, setOptions] = useState([\"Option 1\"]);\r\n  return (\r\n    <div className=\"w-full lg:w-2/3 border-l-8 border-indigo-500 pt-5 px-2 shadow-lg bg-gray-50 my-3 rounded-lg \">\r\n      {/* Question and Question Type section */}\r\n      <div className=\"flex\">\r\n        <div className=\"flex-1\">\r\n          <textarea\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Question\"\r\n            className=\"w-full outline-none bg-transparent focus:bg-gray-300 placeholder-gray-500 text-xl py-3 px-3 focus:border-indigo-500 border-b-4\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"ml-2\">\r\n          <Menu as=\"div\" className=\"relative inline-block z-10 text-left\">\r\n            {({ open }) => (\r\n              <>\r\n                <div>\r\n                  <Menu.Button className=\"inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\">\r\n                    {answerType}\r\n                    <ChevronDownIcon\r\n                      className=\"-mr-1 ml-2 h-5 w-5\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  </Menu.Button>\r\n                </div>\r\n\r\n                <Transition\r\n                  show={open}\r\n                  as={Fragment}\r\n                  enter=\"transition ease-out duration-100\"\r\n                  enterFrom=\"transform opacity-0 scale-95\"\r\n                  enterTo=\"transform opacity-100 scale-100\"\r\n                  leave=\"transition ease-in duration-75\"\r\n                  leaveFrom=\"transform opacity-100 scale-100\"\r\n                  leaveTo=\"transform opacity-0 scale-95\"\r\n                >\r\n                  <Menu.Items\r\n                    static\r\n                    className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-100 focus:outline-none\"\r\n                  >\r\n                    <div className=\"py-1\">\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <span\r\n                            onClick={() => setAnswerType(\"Multiple Choice\")}\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"group flex items-center px-4 py-2 text-sm\"\r\n                            )}\r\n                          >\r\n                            <PencilAltIcon\r\n                              className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\"\r\n                              aria-hidden=\"true\"\r\n                            />\r\n                            Multiple Choice\r\n                          </span>\r\n                        )}\r\n                      </Menu.Item>\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <span\r\n                            onClick={() => setAnswerType(\"Short answer\")}\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"group flex items-center px-4 py-2 text-sm\"\r\n                            )}\r\n                          >\r\n                            <DuplicateIcon\r\n                              className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\"\r\n                              aria-hidden=\"true\"\r\n                            />\r\n                            Short answer\r\n                          </span>\r\n                        )}\r\n                      </Menu.Item>\r\n                    </div>\r\n                    <div className=\"py-1\">\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <span\r\n                            onClick={() => setAnswerType(\"Paragraph\")}\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"group flex items-center px-4 py-2 text-sm\"\r\n                            )}\r\n                          >\r\n                            <ArchiveIcon\r\n                              className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\"\r\n                              aria-hidden=\"true\"\r\n                            />\r\n                            Paragraph\r\n                          </span>\r\n                        )}\r\n                      </Menu.Item>\r\n                    </div>\r\n                  </Menu.Items>\r\n                </Transition>\r\n              </>\r\n            )}\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n      {/* Description Section */}\r\n      {showDescription && (\r\n        <input\r\n          rows={4}\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          className=\"text-gray-500 bg-transparent w-full px-3 border-b outline-none py-2\"\r\n        />\r\n      )}\r\n      {/* Answers Section */}\r\n      <div className=\"p-3\">\r\n        {answerType === \"Paragraph\" && (\r\n          <div className=\"border-b w-full\">{answerType}</div>\r\n        )}\r\n        {answerType === \"Short answer\" && (\r\n          <div className=\"border-b\">{answerType}</div>\r\n        )}\r\n\r\n        {answerType === \"Multiple Choice\" && (\r\n          <div>\r\n            {options.map((option, optionId) => (\r\n              <div className=\"w-full flex\" key={optionId}>\r\n                <span className=\"mr-4 font-bold text-lg\">{optionId + 1}</span>\r\n                <input\r\n                  type=\"text\"\r\n                  value={option}\r\n                  className=\"w-full outline-none bg-transparent border-b\"\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Settings Section */}\r\n      <div className=\"border-t flex justify-end py-4 px-4 border-gray-300\">\r\n        <div className=\"flex p-2 border-r\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-8 w-8 mr-3 text-gray-500 cursor-pointer\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\r\n            />\r\n          </svg>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-8 w-8 text-gray-500 cursor-pointer\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div className=\"flex items-center\">\r\n          <Switch.Group as=\"div\" className=\"flex items-center mr-3\">\r\n            <Switch.Label as=\"span\" className=\"ml-3\">\r\n              <span className=\"text-sm font-medium mr-2 text-gray-900\">\r\n                Required\r\n              </span>\r\n            </Switch.Label>\r\n            <Switch\r\n              checked={enabled}\r\n              onChange={setEnabled}\r\n              className={classNames(\r\n                enabled ? \"bg-indigo-600\" : \"bg-gray-200\",\r\n                \"relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              )}\r\n            >\r\n              <span className=\"sr-only\">Use setting</span>\r\n              <span\r\n                aria-hidden=\"true\"\r\n                className={classNames(\r\n                  enabled ? \"translate-x-5\" : \"translate-x-0\",\r\n                  \"pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200\"\r\n                )}\r\n              />\r\n            </Switch>\r\n          </Switch.Group>\r\n\r\n          <Menu as=\"div\" className=\"relative inline-block text-left\">\r\n            {({ open }) => (\r\n              <>\r\n                <div>\r\n                  <Menu.Button className=\"bg-gray-100 rounded-full flex items-center text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\">\r\n                    <span className=\"sr-only\">Open options</span>\r\n                    <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </Menu.Button>\r\n                </div>\r\n\r\n                <Transition\r\n                  show={open}\r\n                  as={Fragment}\r\n                  enter=\"transition ease-out duration-100\"\r\n                  enterFrom=\"transform opacity-0 scale-95\"\r\n                  enterTo=\"transform opacity-100 scale-100\"\r\n                  leave=\"transition ease-in duration-75\"\r\n                  leaveFrom=\"transform opacity-100 scale-100\"\r\n                  leaveTo=\"transform opacity-0 scale-95\"\r\n                >\r\n                  <Menu.Items\r\n                    static\r\n                    className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n                  >\r\n                    <div className=\"py-1\">\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <a\r\n                            onClick={() => setShowDescription((prev) => !prev)}\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm\"\r\n                            )}\r\n                          >\r\n                            Description\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item>\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <a\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm\"\r\n                            )}\r\n                          >\r\n                            Support\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item>\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <a\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm\"\r\n                            )}\r\n                          >\r\n                            License\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item>\r\n                      <form method=\"POST\" action=\"#\">\r\n                        <Menu.Item>\r\n                          {({ active }) => (\r\n                            <button\r\n                              type=\"submit\"\r\n                              className={classNames(\r\n                                active\r\n                                  ? \"bg-gray-100 text-gray-900\"\r\n                                  : \"text-gray-700\",\r\n                                \"block w-full text-left px-4 py-2 text-sm\"\r\n                              )}\r\n                            >\r\n                              Sign out\r\n                            </button>\r\n                          )}\r\n                        </Menu.Item>\r\n                      </form>\r\n                    </div>\r\n                  </Menu.Items>\r\n                </Transition>\r\n              </>\r\n            )}\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionaireTool;\r\n",{"ruleId":"32","severity":1,"message":"33","line":20,"column":19,"nodeType":"34","messageId":"35","endLine":20,"endColumn":29},"no-unused-vars","'setOptions' is assigned a value but never used.","Identifier","unusedVar"]